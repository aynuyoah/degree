<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<!DOCTYPE generatorConfiguration-->
<!--        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"-->
<!--        "http://mybatis.org/dtd/mybatis-generator-config_1.0.dtd">-->
<!--<generatorConfiguration>-->

<!--    &lt;!&ndash; 数据库驱动:选择你的本地硬盘上面的数据库驱动包 &ndash;&gt;-->
<!--    &lt;!&ndash;    因为已经在pom.xml添加逆向工程插件时添加了驱动依赖，所以省略这一步&ndash;&gt;-->
<!--    &lt;!&ndash;    <classPathEntry  location="C:\Users\lenovo\Desktop\Software_project\java\mysql-connector-java-8.0.28/mysql-connector-java-8.0.28.jar"/>&ndash;&gt;-->

<!--    <context id="DB2Tables" targetRuntime="MyBatis3">-->
<!--        &lt;!&ndash; 实体类生成序列化属性&ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
<!--        &lt;!&ndash; 实体类重写HashCode()和equals()&ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
<!--        &lt;!&ndash; 实体类重写toString() &ndash;&gt;-->
<!--        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>-->

<!--        <commentGenerator>-->
<!--            &lt;!&ndash; 是否去除自动生成的注释 &ndash;&gt;-->
<!--            <property name="suppressAllComments" value="true"/>-->
<!--            &lt;!&ndash; 生成注释是否带时间戳&ndash;&gt;-->
<!--            <property name="suppressDate" value="true"/>-->
<!--            &lt;!&ndash; 生成的Java文件的编码格式 &ndash;&gt;-->
<!--            <property name="javaFileEncoding" value="utf-8"/>-->
<!--            &lt;!&ndash; 数据库注释支持 &ndash;&gt;-->
<!--            <property name="addRemarkComments" value="true"/>-->
<!--            &lt;!&ndash; 时间格式设置 &ndash;&gt;-->
<!--            <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>-->
<!--            &lt;!&ndash; 格式化java代码&ndash;&gt;-->
<!--            <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>-->
<!--            &lt;!&ndash; 格式化XML代码&ndash;&gt;-->
<!--            <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>-->
<!--        </commentGenerator>-->

<!--        &lt;!&ndash; 数据库连接驱动类,URL，用户名、密码 &ndash;&gt;-->
<!--        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"-->
<!--                        connectionURL="jdbc:mysql://localhost:3306/test_project?useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true"-->
<!--                        userId="root"-->
<!--                        password="root">-->
<!--            <property name="nullCatalogMeansCurrent" value="true"/>-->
<!--        </jdbcConnection>-->

<!--        &lt;!&ndash; java类型处理器：处理DB中的类型到Java中的类型 &ndash;&gt;-->
<!--        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">-->
<!--            &lt;!&ndash; 是否有效识别DB中的BigDecimal类型 &ndash;&gt;-->
<!--            <property name="forceBigDecimals" value="true"/>-->
<!--        </javaTypeResolver>-->

<!--        &lt;!&ndash; 生成Domain模型：包名(targetPackage)、位置(targetProject) &ndash;&gt;-->
<!--        <javaModelGenerator targetPackage="com.test.project.entity" targetProject="C:\Users\lenovo\Desktop\project\src\main\java">-->
<!--            &lt;!&ndash; 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false &ndash;&gt;-->
<!--            <property name="enableSubPackages" value="true"/>-->
<!--            &lt;!&ndash; 设置是否在getter方法中，对String类型字段调用trim()方法&ndash;&gt;-->
<!--            <property name="trimStrings" value="true"/>-->
<!--        </javaModelGenerator>-->

<!--        &lt;!&ndash; 生成xml映射文件：包名(targetPackage)、位置(targetProject) &ndash;&gt;-->
<!--        <sqlMapGenerator targetPackage="mapper" targetProject="C:\Users\lenovo\Desktop\project\src\main\resources">-->
<!--            <property name="enableSubPackages" value="true"/>-->
<!--        </sqlMapGenerator>-->

<!--        &lt;!&ndash; 生成DAO接口：包名(targetPackage)、位置(targetProject) &ndash;&gt;-->
<!--        <javaClientGenerator type="XMLMAPPER" targetPackage="com.test.project.dao"-->
<!--                             targetProject="C:\Users\lenovo\Desktop\project\src\main\java">-->
<!--            <property name="enableSubPackages" value="true"/>-->
<!--        </javaClientGenerator>-->
<!--        &lt;!&ndash; tableName设置为*号，可以对应所有表，此时不写domainObjectName &ndash;&gt;-->
<!--        &lt;!&ndash; domainObjectName属性指定生成出来的实体类的类名 &ndash;&gt;-->
<!--        <table tableName="tc_menu_action" domainObjectName="MenuAction">-->
<!--            &lt;!&ndash;            若数据库中某个属性类型为text或类似类型，可能会发生无法生成这个属性，此时可以在这里指定转换类型为VARCHAR&ndash;&gt;-->
<!--            &lt;!&ndash;            <columnOverride column="teacher_name" jdbcType="VARCHAR" />&ndash;&gt;-->

<!--            &lt;!&ndash;        　　table标签下的设置属性useActualColumnNames用于指定生成实体类时是否使用实际的列名作为实体类的属性名，取值true或false。&ndash;&gt;-->
<!--            &lt;!&ndash;        　　true：MyBatis Generator会使用数据库中实际的字段名字作为生成的实体类的属性名。&ndash;&gt;-->
<!--            &lt;!&ndash;        　　false：这是默认值。如果设置为false,则MyBatis Generator会将数据库中实际的字段名字转换为Camel Case风格作为生成的实体类的属性名。&ndash;&gt;-->
<!--            <property name="useActualColumnNames" value="false" />-->
<!--        </table>-->
<!--    </context>-->
<!--</generatorConfiguration>-->